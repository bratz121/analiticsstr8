{"ast":null,"code":"import{useState,useEffect,useCallback}from\"react\";import{useAuth}from\"./useAuth\";const API_URL=process.env.REACT_APP_API_URL||\"https://str8-server.onrender.com\";export const usePlayers=()=>{const[players,setPlayers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const{token}=useAuth();const fetchPlayers=useCallback(async()=>{if(!token){setError(\"Требуется авторизация\");setLoading(false);return;}try{const response=await fetch(`${API_URL}/api/players`,{headers:{Authorization:`Bearer ${token}`}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||\"Ошибка при загрузке игроков\");}const data=await response.json();setPlayers(data);setError(null);}catch(err){setError(err instanceof Error?err.message:\"Произошла ошибка\");}finally{setLoading(false);}},[token]);const addPlayer=async playerData=>{if(!token){throw new Error(\"Требуется авторизация\");}try{const response=await fetch(`${API_URL}/api/players`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`},body:JSON.stringify(playerData)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||\"Ошибка при добавлении игрока\");}const newPlayer=await response.json();setPlayers(prev=>[...prev,newPlayer]);setError(null);return newPlayer;}catch(err){const errorMessage=err instanceof Error?err.message:\"Произошла ошибка\";setError(errorMessage);throw new Error(errorMessage);}};useEffect(()=>{if(token){fetchPlayers();}},[token,fetchPlayers]);return{players,loading,error,addPlayer,refreshPlayers:fetchPlayers};};","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","API_URL","process","env","REACT_APP_API_URL","usePlayers","players","setPlayers","loading","setLoading","error","setError","token","fetchPlayers","response","fetch","headers","Authorization","ok","errorData","json","Error","message","data","err","addPlayer","playerData","method","body","JSON","stringify","newPlayer","prev","errorMessage","refreshPlayers"],"sources":["C:/Users/zelud/OneDrive/Desktop/str8/analiticsstr8/src/hooks/usePlayers.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { Player } from \"../types\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\nconst API_URL =\r\n  process.env.REACT_APP_API_URL || \"https://str8-server.onrender.com\";\r\n\r\nexport const usePlayers = () => {\r\n  const [players, setPlayers] = useState<Player[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { token } = useAuth();\r\n\r\n  const fetchPlayers = useCallback(async () => {\r\n    if (!token) {\r\n      setError(\"Требуется авторизация\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/players`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Ошибка при загрузке игроков\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPlayers(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Произошла ошибка\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const addPlayer = async (\r\n    playerData: Omit<Player, \"id\" | \"matches\" | \"stats\">\r\n  ) => {\r\n    if (!token) {\r\n      throw new Error(\"Требуется авторизация\");\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/players`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(playerData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Ошибка при добавлении игрока\");\r\n      }\r\n\r\n      const newPlayer = await response.json();\r\n      setPlayers((prev) => [...prev, newPlayer]);\r\n      setError(null);\r\n      return newPlayer;\r\n    } catch (err) {\r\n      const errorMessage =\r\n        err instanceof Error ? err.message : \"Произошла ошибка\";\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchPlayers();\r\n    }\r\n  }, [token, fetchPlayers]);\r\n\r\n  return {\r\n    players,\r\n    loading,\r\n    error,\r\n    addPlayer,\r\n    refreshPlayers: fetchPlayers,\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}